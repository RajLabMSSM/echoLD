% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/load_or_create.R
\name{load_or_create}
\alias{load_or_create}
\title{Procure an LD matrix for fine-mapping}
\usage{
load_or_create(
  locus_dir,
  dat,
  force_new_LD = FALSE,
  LD_reference = c("1KGphase1", "1KGphase3", "UKB"),
  LD_genome_build = "hg19",
  superpopulation = "EUR",
  remote_LD = TRUE,
  download_method = "axel",
  local_storage = NULL,
  LD_block_size = NULL,
  fillNA = 0,
  verbose = TRUE,
  remove_tmps = TRUE,
  as_sparse = TRUE,
  conda_env = "echoR",
  nThread = 1
)
}
\arguments{
\item{locus_dir}{Storage directory to use.}

\item{dat}{GWAS summary statistics subset to query the LD panel with.}

\item{force_new_LD}{If LD file exists, create a new one.}

\item{LD_reference}{LD reference to use:
\itemize{
\item{"1KGphase1" : }{1000 Genomes Project Phase 1}
\item{"1KGphase3" : }{1000 Genomes Project Phase 3}
\item{"UKB" : }{Pre-computed LD from a British 
European-decent subset of UK Biobank.}
}}

\item{LD_genome_build}{Genome build of the LD panel 
(used only if providing custom LD panel).}

\item{superpopulation}{Superpopulation to subset LD panel by
(used only if \code{LD_reference} is "1KGphase1" or "1KGphase3".)}

\item{remote_LD}{Whether to pull the LD reference from remote repository, 
or locally stored files.}

\item{download_method}{\itemize{
\item{\code{"axel"} : }{Multi-threaded}
\item{\code{"wget"} : }{Single-threaded}
\item{\code{"download.file"} : }{Single-threaded}
\item{\code{"internal"} : }{Single-threaded 
(passed to \link[utils]{download.file})}
\item{\code{"wininet"} : }{Single-threaded 
(passed to \link[utils]{download.file})}
\item{\code{"libcurl"} : }{Single-threaded 
(passed to \link[utils]{download.file})}
\item{\code{"curl"} : }{Single-threaded 
(passed to \link[utils]{download.file})}
}
 or
\code{"download.file"} (single-threaded) .}

\item{local_storage}{Storage folder for previously downloaded LD files.
If \code{LD_reference} is "1KGphase1" or "1KGphase3",
\code{local_storage} is where VCF files are stored.
If \code{LD_reference} is "UKB", \code{local_storage} is where 
LD compressed numpy array (npz) files are stored. 
Set to \code{NULL} to download VCFs/LD npz from remote storage system.}

\item{LD_block_size}{Block size. Passed to
"--blocks-inform-frac" argument in \code{plink}. 
Recommended default value is \code{0.7}.}

\item{fillNA}{Value to fill LD matrix NAs with.}

\item{verbose}{Print messages.}

\item{remove_tmps}{Remove all temporary files like VCF, npz, and plink files.}

\item{as_sparse}{Convert the LD matrix to a sparse matrix.}

\item{conda_env}{Conda environment name.}

\item{nThread}{Number of threads to parallelize over.}
}
\value{
A symmetric LD matrix of pairwise \emph{r} values.
}
\description{
Calculate and/or query linkage disequilibrium (LD) from reference panels
 (UK Biobank, 1000 Genomes), a user-supplied pre-computed LD matrix
}
\details{
Options:
\itemize{
\item{Download pre-computed LD matrix from UK Biobank.}
\item{Download raw VCF file from 1KG and compute LD on the fly.}
\item{Compute LD on the fly from a user-supplied VCF file.}
\item{Use a user-supplied pre-computed LD-matrix.}
}
}
\examples{
data("BST1")
data("locus_dir")
locus_dir <- file.path(tempdir(), locus_dir)
BST1 <- BST1[seq(1, 50), ]

#LD_matrix <- load_or_create(
#    locus_dir = locus_dir,
#    dat = BST1,
#    LD_reference = "1KGphase1"
#) 
}
\seealso{
Other LD: 
\code{\link{LD_1KG_download_vcf}()},
\code{\link{LD_1KG}()},
\code{\link{LD_blocks}()},
\code{\link{LD_ukbiobank}()},
\code{\link{calculate_LD}()},
\code{\link{construct_subset_vcf_name}()},
\code{\link{custom_panel}()},
\code{\link{dprime_table}()},
\code{\link{filter_LD}()},
\code{\link{filter_vcf_gaston}()},
\code{\link{filter_vcf}()},
\code{\link{get_locus_vcf_folder}()},
\code{\link{index_vcf}()},
\code{\link{ldlinkr_ldproxy_batch}()},
\code{\link{leadSNP_block}()},
\code{\link{plink_LD}()},
\code{\link{plink_file}()},
\code{\link{plot_LD}()},
\code{\link{popDat_1KGphase1}},
\code{\link{popDat_1KGphase3}},
\code{\link{query_vcf}()},
\code{\link{rds_to_npz}()},
\code{\link{read_bin}()},
\code{\link{read_ld_table}()},
\code{\link{run_plink_LD}()},
\code{\link{saveSparse}()},
\code{\link{save_LD_matrix}()},
\code{\link{snpstats_get_LD}()},
\code{\link{snpstats_get_MAF}()},
\code{\link{translate_population}()},
\code{\link{vcf_to_bed}()}
}
\concept{LD}
