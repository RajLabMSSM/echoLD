% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_LD_1KG.R
\name{get_LD_1KG}
\alias{get_LD_1KG}
\title{Compute LD from 1000 Genomes}
\usage{
get_LD_1KG(
  locus_dir,
  query_dat,
  query_genome = "hg19",
  LD_reference = "1KGphase1",
  superpopulation = NULL,
  samples = character(0),
  local_storage = NULL,
  leadSNP_LD_block = FALSE,
  force_new = FALSE,
  force_new_MAF = FALSE,
  fillNA = 0,
  stats = "R",
  as_sparse = TRUE,
  remove_tmps = TRUE,
  conda_env = "echoR_mini",
  nThread = 1,
  verbose = TRUE
)
}
\arguments{
\item{locus_dir}{Storage directory to use.}

\item{query_dat}{SNP-level summary statistics subset 
to query the LD panel with.}

\item{query_genome}{Genome build of the \code{query_dat}.}

\item{LD_reference}{LD reference to use:
\itemize{
\item{"1KGphase1" : }{1000 Genomes Project Phase 1}
\item{"1KGphase3" : }{1000 Genomes Project Phase 3}
\item{"UKB" : }{Pre-computed LD from a British
European-decent subset of UK Biobank.}
\item{"<vcf_path>" : }{User-supplied path to a custom VCF file 
to compute LD matrix from.}
}}

\item{superpopulation}{Superpopulation to subset LD panel by
(used only if \code{LD_reference} is "1KGphase1" or "1KGphase3").
See \link[echoLD]{popDat_1KGphase1} and \link[echoLD]{popDat_1KGphase3}
for full tables of their respective samples.}

\item{samples}{[Optional] Sample names to subset the VCF by. 
If this option is used, the \link[GenomicRanges]{GRanges} object will be
converted to a \link[VariantAnnotation]{ScanVcfParam} for usage by 
\link[VariantAnnotation]{readVcf}.}

\item{local_storage}{Storage folder for previously downloaded LD files.
If \code{LD_reference} is "1KGphase1" or "1KGphase3",
\code{local_storage} is where VCF files are stored.
If \code{LD_reference} is "UKB", \code{local_storage} is where
LD compressed numpy array (npz) files are stored.
Set to \code{NULL} to download VCFs/LD npz from remote storage system.}

\item{leadSNP_LD_block}{Only return SNPs within the same LD block
as the lead SNP (the SNP with the smallest p-value).}

\item{fillNA}{When pairwise LD (r) between two SNPs is \code{NA},
replace with 0.}

\item{as_sparse}{Save/return LD matrix as a sparse matrix.}

\item{remove_tmps}{Remove all intermediate files
like VCF, npz, and plink files.}

\item{conda_env}{Conda environments to search in. 
If \code{NULL} (default), will search all conda environments.}

\item{nThread}{Number of threads to parallelize over.}

\item{verbose}{Print messages.}
}
\description{
Downloads a subset vcf of the 1KG database that matches
 your locus coordinates. Then uses \link[snpStats]{ld}
  to calculate LD on the fly.
}
\details{
This approach is taken, because other API query tools have
limitations with the window size being queried.
This approach does not have this limitations,
allowing you to fine-map loci more completely.
}
\seealso{
Other LD: 
\code{\link{check_population_1kg}()},
\code{\link{compute_LD}()},
\code{\link{filter_LD}()},
\code{\link{get_LD_1KG_download_vcf}()},
\code{\link{get_LD_UKB}()},
\code{\link{get_LD_custom}()},
\code{\link{get_LD}()},
\code{\link{get_locus_vcf_folder}()},
\code{\link{ldlinkr_ldproxy_batch}()},
\code{\link{plot_LD}()},
\code{\link{popDat_1KGphase1}},
\code{\link{popDat_1KGphase3}},
\code{\link{rds_to_npz}()},
\code{\link{saveSparse}()},
\code{\link{save_LD_matrix}()},
\code{\link{snpstats_get_MAF}()}
}
\concept{LD}
\keyword{internal}
