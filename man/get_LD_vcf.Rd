% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_LD_vcf.R
\name{get_LD_vcf}
\alias{get_LD_vcf}
\title{Compute LD from VCF file}
\usage{
get_LD_vcf(
  locus_dir = tempdir(),
  query_dat,
  LD_reference,
  query_genome = "hg19",
  target_genome = "hg19",
  superpopulation = NULL,
  samples = NULL,
  overlapping_only = TRUE,
  leadSNP_LD_block = FALSE,
  force_new = FALSE,
  force_new_MAF = FALSE,
  fillNA = 0,
  stats = "R",
  as_sparse = TRUE,
  remove_tmps = TRUE,
  nThread = 1,
  conda_env = "echoR_mini",
  verbose = TRUE
)
}
\arguments{
\item{locus_dir}{Storage directory to use.}

\item{query_dat}{SNP-level summary statistics subset 
to query the LD panel with.}

\item{LD_reference}{LD reference to use:
\itemize{
\item{"1KGphase1" : }{1000 Genomes Project Phase 1 (genome build: hg19).}
\item{"1KGphase3" : }{1000 Genomes Project Phase 3 (genome build: hg19).}
\item{"UKB" : }{Pre-computed LD from a British
European-decent subset of UK Biobank.
\emph{Genome build} : hg19}
\item{"<vcf_path>" : }{User-supplied path to a custom VCF file 
to compute LD matrix from.\cr
\emph{Accepted formats}: \emph{.vcf} / \emph{.vcf.gz} / \emph{.vcf.bgz}\cr
\emph{Genome build} : defined by user with \code{target_genome}.}
\item{"<matrix_path>" : }{User-supplied path to a pre-computed LD matrix   
\emph{Accepted formats}:  \emph{.rds} / \emph{.rda} / \emph{.csv} / 
\emph{.tsv} / \emph{.txt}\cr
\emph{Genome build} : defined by user with \code{target_genome}.}
}}

\item{query_genome}{Genome build of the \code{query_dat}.}

\item{target_genome}{Genome build of the LD panel. 
This is automatically assigned to the correct genome build for each LD panel
 except when the user supplies custom vcf/LD files.}

\item{superpopulation}{Superpopulation to subset LD panel by
(used only if \code{LD_reference} is "1KGphase1" or "1KGphase3").
See \link[echoLD]{popDat_1KGphase1} and \link[echoLD]{popDat_1KGphase3}
for full tables of their respective samples.}

\item{samples}{[Optional] Sample names to subset the VCF by. 
If this option is used, the \link[GenomicRanges]{GRanges} object will be
converted to a \link[VariantAnnotation]{ScanVcfParam} for usage by 
\link[VariantAnnotation]{readVcf}.}

\item{overlapping_only}{Remove variants that do not overlap with the 
positions in \code{query_dat}.}

\item{leadSNP_LD_block}{Only return SNPs within the same LD block
as the lead SNP (the SNP with the smallest p-value).}

\item{force_new}{Force the creation of a new VCF subset file
even if one exists.}

\item{fillNA}{When pairwise LD between two SNPs is \code{NA},
replace with 0.}

\item{stats}{LD stats to r}

\item{as_sparse}{Convert the LD matrix to a sparse matrix.}

\item{remove_tmps}{Remove all intermediate files
like \emph{vcf}, \emph{npz}, and \emph{plink} files.}

\item{nThread}{Number of threads to parallelize over.}

\item{conda_env}{Conda environments to search in. 
If \code{NULL} (default), will search all conda environments.}

\item{verbose}{Print messages.}
}
\description{
Imports a subset of a local or remote VCF file that matches
 your locus coordinates. Then uses \link[snpStats]{ld}
  to calculate LD on the fly.
}
\examples{
 
query_dat <-  echodata::BST1[seq(1, 50), ]
locus_dir <- echodata::locus_dir
locus_dir <- file.path(tempdir(), locus_dir) 
LD_reference <- system.file("extdata", "BST1.1KGphase3.vcf.bgz",
    package = "echodata"
)
LD_list <- get_LD_vcf(
    locus_dir = locus_dir,
    query_dat = query_dat,
    LD_reference = LD_reference) 
}
\seealso{
Other LD: 
\code{\link{check_population_1kg}()},
\code{\link{compute_LD}()},
\code{\link{filter_LD}()},
\code{\link{get_LD_1KG_download_vcf}()},
\code{\link{get_LD_1KG}()},
\code{\link{get_LD_UKB}()},
\code{\link{get_LD_matrix}()},
\code{\link{get_LD}()},
\code{\link{get_locus_vcf_folder}()},
\code{\link{ldlinkr_ldproxy_batch}()},
\code{\link{plot_LD}()},
\code{\link{popDat_1KGphase1}},
\code{\link{popDat_1KGphase3}},
\code{\link{rds_to_npz}()},
\code{\link{saveSparse}()},
\code{\link{save_LD_matrix}()},
\code{\link{snpstats_get_MAF}()}
}
\concept{LD}
